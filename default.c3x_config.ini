[============================]
[=== CONVENIENCE FEATURES ===]
[============================]

enable_stack_bombard = true
enable_stack_unit_commands = true
enable_disorder_warning = true
show_detailed_city_production_info = true
enable_trade_screen_scroll = true
autofill_best_gold_amount_when_trading = true
skip_repeated_tile_improv_replacement_asks = true
group_units_on_right_click_menu = true
show_detailed_tile_info = true
show_golden_age_turns_remaining = true

; Holding shift when clicking a specialist on the city screen will switch to the previous, instead of the next, specialist type
reverse_specialist_order_with_shift = true

; When king units are spawned they're named after the leader of their civ. This is undesirable in modded games where the king flag is often used
; on units that aren't intended to be actual kings. This setting helps by bypassing the king unit naming logic when regicide is not enabled.
dont_give_king_names_in_non_regicide_games = true

; Removes option to automate workers from the human player. Useful for those who never want to use automation but sometimes accidentally activate it.
disable_worker_automation = false

[=======================]
[=== AI ENHANCEMENTS ===]
[=======================]

; Allows artillery unit AI to grab escorts from city defenders, causing the AI to use its artillery offensively instead of leaving it in its cities.
use_offensive_artillery_ai = true

; Set to a number to encourage the AI to build more artillery, set to false or <= 0 for no change in AI unit build choices. The number is how many
; artillery units the AI will try to keep around for every 100 non-artillery combat land units it has. The encouragement only applies if the AI is
; already above a minimum of one defensive unit per city and one offensive unit per two cities. Default: 20.
ai_build_artillery_ratio = 20

; The above option controls how many artillery the AI will keep around, this one controls how aggressively it builds up to that limit. More
; specifically it controls how valuable (in percent) the AI thinks artillery is as a damage dealer compared to attacking units. Default: 50.
ai_artillery_value_damage_percent = 50

; Like the artillery ratio, shifts the AI's build priority from fighters to bombers to keep around this many bombers per 100 fighters. Default: 70.
ai_build_bomber_ratio = 70

; Completely replaces the leader unit AI with custom code. The custom version is similar in spirit to the original but fixes several major issues:
; 1. It fixes a bug that allowed the AI to rush any kind of city production, including units and (with an MGL) wonders
; 2. Prioritizes army formation over rushing production when appropriate
; 3. When rushing, prioritizes wonders and costly improvements in high value cities
replace_leader_unit_ai = true

; Replaces the AI code that determines whether a unit would be a good addition to an army. The replacement code fixes a major bug that prevented the
; AI from filling its armies, prevents the AI from including hidden nationality units in armies to avoid crashes, and removes some logic that
; encouraged the AI to mix unit types in armies.
fix_ai_army_composition = true

enable_pop_unit_ai = true

[=================]
[=== BUG FIXES ===]
[=================]

patch_submarine_bug = true
patch_science_age_bug = true
patch_pedia_texture_bug = true
patch_disembark_immobile_bug = true
patch_houseboat_bug = true
patch_intercept_lost_turn_bug = true
patch_phantom_resource_bug = true

[=========================]
[=== ENGINE EXTENSIONS ===]
[=========================]

adjust_minimum_city_separation = 0
disallow_founding_next_to_foreign_city = true

; Set to a number to limit railroad movement to that many tiles per turn. To return to infinite railroad movement, set to false or a number <=0. 
limit_railroad_movement = false

remove_unit_limit = true

; Be warned: the no era limit feature is incomplete, untested, and not likely to work at this time
remove_era_limit = false

enable_free_buildings_from_small_wonders = true
prevent_autorazing = false
prevent_razing_by_ai_players = false
allow_stealth_attack_against_single_unit = true
disallow_trespassing = false
enable_land_sea_intersections = false

; Set to a number >0 and <=100 to reduce anarchy time by that amount as a percentage. For example, if set to 50, anarchy length is reduced by half, so
; a 7 turn anarchy becomes 3 or 4 turns. There is a minimum anarchy length of 2 turns regardless of the reduction, but you can remove anarchy entirely
; by setting the reduction >100.
anarchy_length_reduction_percent = 0

; Add perfume to an improvement or unit type to encourage the AI to build it more often. When choosing what to buld, the AI computes a point value for
; each of its options and the mod will add the perfume amount to the point total for each named option. For reference, point values are often in the
; hundreds for the most desirable options. You can see the point value the AI gives to every available build by pressing P while viewing one of its
; cities.
; perfume_specs is a list of names and amounts, each one looks like "name": amount
; Here's an example: ["Granary": 15, "Colosseum": -20, "Courthouse": 30]
; The quotation marks around a name are not necessary if the name is all one word (i.e. does not include spaces) and is made up of only letters,
; digits (0-9), periods, hyphens, or underscores. The category of letters includes the normal English a-z and A-Z as well as accented variants
; (e.g. ä, ö, ñ, ç) and all other non-English letters available in the Windows-1252 encoding (e.g. ß, þ, æ).
perfume_specs = []

; The AI production ranking is the point value the AI gives to each available build in some city. To view it, press P while viewing an AI city.
enable_ai_production_ranking = true

; Shades/highlights each tile to show how desirable the AI considers it as a city location. To activate, press L while in game. The scale goes from
; white (least desirable) to red (most desirable) with yellow in between. Also the exact number the AI gives any tile can be seen on its info box.
enable_ai_city_location_desirability_display = true

; Setting a government's corruption level to "OFF" will remove all corruption, as expected, instead of maximizing it
zero_corruption_when_off = true

; Prevents land settlers/workers on transports from settling/improving water tiles. This option does not affect the vanilla game but is useful for
; mods that enable city building or improvement of water tiles.
disallow_land_units_from_affecting_water_tiles = true

dont_end_units_turn_after_airdrop = false
enable_negative_pop_pollution = true

; Here it's possible to set buildings as prerequisites for unit production. It's possible for a unit type to have multiple prereq buildings up to a
; maximum of 10, and all must be present in a city for the unit to be buildable.
; The format is a list of building names and unit type names, each one looks like "building name": "unit type 1" "unit type 2" ...
; Quotation marks around names can be omitted like in perfume_specs (see above).
; Here's an example:
; [Factory: Tank "Modern Armor",
;  Barracks: Swordsman Cavalry Tank "Modern Armor",
;  Airport: Bomber]
building_prereqs_for_units = []

; Here it's possible to set buildings to generate resources. Those resources can be added to the trade network or limited to the building's city.  The
; format is a list of building name and resource name pairs with an optional "local" keyword before each resource name. Here's an example:
; ["Steel Mill": Steel, "Coal Liquefaction": local Oil]
; Quotation marks around names can be omitted like in perfume_specs (see above).
; The keyword "local" means that the produced resource will not be added to the trade network, it will be available only in the building's city.
; Buildings will not generate resources if the resource requirement for the building itself is not met. This makes it possible to set up resource
; production chains. Note for modders: Production chains require the input resources to be listed before the outputs in the scenario data, when the
; inputs also come from buildings. For example if you have iron ore on the map, a building that requires it and produces iron, and a building that
; requires iron and produces steel, iron must be listed before steel in the scenario data or the chain won't work. This is because building resource
; generation is calculated in the same order as the generated resources appear in the scenario data. This limitation does not apply to map resources
; (iron ore in the example) as access to all map resources is calculated first before any building resources.
buildings_generating_resources = []

; Shows a warning in case some of the unit, building, or resource names in the options above don't match anything in the scenario data.
warn_about_unrecognized_names = true

; Overrides the rules for when units are eligible to retreat based on their movement. The possible options are:
;   standard: No change from base game rules
;   none: No units will ever retreat
;   all-units: All units may retreat, even if they have only one move or are up against a faster opponent
;   if-faster: Units may retreat when they are faster than their opponent, for example a cavalry may retreat from a knight
; These rules do not change the fact that units cannot retreat when they start combat with 1 HP or are defending a city.
retreat_rules = standard
